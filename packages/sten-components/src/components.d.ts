/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { IOption } from "./components/sten-autocomplete/type";
export namespace Components {
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface StenAlert {
        /**
          * 点击关闭
         */
        "close": () => Promise<void>;
        /**
          * 是否展示关闭按钮， 默认关闭
         */
        "dismissible": boolean;
        /**
          * 类型
         */
        "type": 'default' | 'brand' | 'info' | 'warning' | 'success' | 'error';
    }
    interface StenAutocomplete {
        "close": () => Promise<void>;
        "open": () => Promise<void>;
        "options": IOption[];
        "placeholder": string;
    }
    interface StenButton {
    }
    interface StenModal {
    }
}
declare global {
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLStenAlertElement extends Components.StenAlert, HTMLStencilElement {
    }
    var HTMLStenAlertElement: {
        prototype: HTMLStenAlertElement;
        new (): HTMLStenAlertElement;
    };
    interface HTMLStenAutocompleteElement extends Components.StenAutocomplete, HTMLStencilElement {
    }
    var HTMLStenAutocompleteElement: {
        prototype: HTMLStenAutocompleteElement;
        new (): HTMLStenAutocompleteElement;
    };
    interface HTMLStenButtonElement extends Components.StenButton, HTMLStencilElement {
    }
    var HTMLStenButtonElement: {
        prototype: HTMLStenButtonElement;
        new (): HTMLStenButtonElement;
    };
    interface HTMLStenModalElement extends Components.StenModal, HTMLStencilElement {
    }
    var HTMLStenModalElement: {
        prototype: HTMLStenModalElement;
        new (): HTMLStenModalElement;
    };
    interface HTMLElementTagNameMap {
        "my-component": HTMLMyComponentElement;
        "sten-alert": HTMLStenAlertElement;
        "sten-autocomplete": HTMLStenAutocompleteElement;
        "sten-button": HTMLStenButtonElement;
        "sten-modal": HTMLStenModalElement;
    }
}
declare namespace LocalJSX {
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface StenAlert {
        /**
          * 是否展示关闭按钮， 默认关闭
         */
        "dismissible"?: boolean;
        /**
          * 暴露给外部的回调
         */
        "onClose"?: (event: CustomEvent<any>) => void;
        /**
          * 类型
         */
        "type"?: 'default' | 'brand' | 'info' | 'warning' | 'success' | 'error';
    }
    interface StenAutocomplete {
        "onFilter"?: (event: CustomEvent<any>) => void;
        "options"?: IOption[];
        "placeholder"?: string;
    }
    interface StenButton {
    }
    interface StenModal {
    }
    interface IntrinsicElements {
        "my-component": MyComponent;
        "sten-alert": StenAlert;
        "sten-autocomplete": StenAutocomplete;
        "sten-button": StenButton;
        "sten-modal": StenModal;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "sten-alert": LocalJSX.StenAlert & JSXBase.HTMLAttributes<HTMLStenAlertElement>;
            "sten-autocomplete": LocalJSX.StenAutocomplete & JSXBase.HTMLAttributes<HTMLStenAutocompleteElement>;
            "sten-button": LocalJSX.StenButton & JSXBase.HTMLAttributes<HTMLStenButtonElement>;
            "sten-modal": LocalJSX.StenModal & JSXBase.HTMLAttributes<HTMLStenModalElement>;
        }
    }
}
